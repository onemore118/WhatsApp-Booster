(() => {

    // 选择要监视的目标元素
    const targetNode = document.body;
    console.log("节点" + targetNode);


    // 观察器的配置（需要观察哪些变动）
    const config = { childList: true, subtree: true,attributes: true, attributeFilter: ['class']  };

    // 当目标节点发生变化时的回调函数
    const observer = new MutationObserver((mutationsList, observer) => {
        mutationsList.forEach((mutation) => {
          mutation.addedNodes.forEach((node) => {
            if (node.nodeType === Node.ELEMENT_NODE && node.classList.contains('_2Ex_b')) {
                //在这里注入你的脚本
                let icon_list = document.getElementsByClassName('_2xy_p _1bAtO')[0];
                let icon_button = document.createElement('div');
                icon_button.innerHTML=`<button class='icon_btn'><svg fill="#000000" height="30px" width="25px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M477.488,125.53l-17.103-59.858c-0.982-3.441-4.128-5.814-7.708-5.814h-8.551c-3.58,0-6.725,2.373-7.708,5.814 l-17.102,59.858c-1.216,4.257,1.248,8.694,5.506,9.911c4.258,1.215,8.694-1.247,9.911-5.506l3.225-11.288h20.889l3.225,11.289 c1.006,3.521,4.216,5.816,7.705,5.816c0.729,0,1.471-0.101,2.206-0.311C476.238,134.224,478.704,129.787,477.488,125.53z M442.537,102.614l5.864-20.523l5.864,20.523H442.537z"></path> </g> </g> <g> <g> <path d="M478.33,17.102h-46.402c0.13-3.659-0.966-7.267-3.209-10.328C425.564,2.469,420.693,0,415.355,0h-99.497 c-18.566,0-33.67,15.105-33.67,33.67v94.063c0,15.805,10.945,29.101,25.653,32.706v35.703c0,3.242,1.953,6.166,4.949,7.406 c0.992,0.41,2.033,0.61,3.067,0.61c2.086,0,4.137-0.815,5.67-2.348l40.406-40.407h8.877c-0.13,3.659,0.966,7.267,3.209,10.328 c3.155,4.305,8.026,6.775,13.363,6.775h90.947c18.566,0,33.67-15.105,33.67-33.67V50.772C512,32.207,496.895,17.102,478.33,17.102 z M375.242,145.37h-16.628c-2.126,0-4.165,0.844-5.668,2.348l-29.071,29.071v-23.402c0-4.427-3.589-8.017-8.017-8.017 c-9.725,0-17.637-7.912-17.637-17.637V33.67c0-9.725,7.912-17.637,17.637-17.637h99.497c0.088,0,0.27,0,0.431,0.218 c0.16,0.219,0.106,0.393,0.079,0.477l-27.483,87.031c-0.36-0.215-0.735-0.413-1.136-0.573 c-6.798-2.718-12.732-6.302-17.792-10.704c9-12.476,12.331-25.564,13.56-33.694h9.805c4.427,0,8.017-3.589,8.017-8.017 c0-4.427-3.589-8.017-8.017-8.017H366.63v-0.534c0-4.427-3.589-8.017-8.017-8.017s-8.017,3.589-8.017,8.017v0.534h-26.188 c-4.427,0-8.017,3.589-8.017,8.017s3.589,8.017,8.017,8.017h42.318c-1.075,5.501-3.35,13.164-8.132,20.872 c-1.283-2.081-2.46-4.255-3.505-6.544c-1.839-4.029-6.597-5.8-10.623-3.961c-4.028,1.84-5.801,6.596-3.961,10.623 c2.051,4.492,4.504,8.695,7.321,12.596c-4.735,4.155-10.583,7.907-17.845,10.812c-4.111,1.645-6.11,6.31-4.466,10.421 c1.254,3.135,4.264,5.042,7.446,5.042c0.991,0,1.999-0.185,2.975-0.575c9.268-3.708,16.734-8.477,22.757-13.761 c6.486,5.704,14.058,10.345,22.595,13.761c0.788,0.314,1.595,0.49,2.399,0.548L375.242,145.37z M495.967,144.835 c0,9.725-7.912,17.637-17.637,17.637h-90.946c-0.088,0-0.27,0-0.431-0.219c-0.159-0.219-0.105-0.392-0.078-0.477l40.622-128.64 h50.832c9.725,0,17.637,7.912,17.637,17.637V144.835z"></path> </g> </g> <g> <g> <path d="M328.274,411.931l-74.947-23.06c-3.836-1.18-6.413-4.67-6.413-8.684v-29.22l4.365-3.637 c7.842-6.535,13.049-15.686,14.662-25.765l0.998-6.24h6.162c13.851,0,25.119-11.268,25.119-25.119v-17.102 c0-12.298-8.886-22.554-20.574-24.699l7.798-48.738c3.541-22.133-2.768-44.607-17.312-61.662 c-14.543-17.055-35.739-26.839-58.153-26.839h-61.88c-22.415,0-43.611,9.781-58.154,26.837 c-14.543,17.055-20.853,39.531-17.312,61.662l7.798,48.738c-11.687,2.146-20.573,12.402-20.573,24.7v17.102 c0,13.851,11.268,25.119,25.119,25.119h6.162l0.998,6.24c1.613,10.08,6.82,19.229,14.662,25.765l4.365,3.638v29.219 c0,4.014-2.577,7.505-6.413,8.684l-74.947,23.06C11.978,417.417,0,433.634,0,452.285v34.596C0,500.732,11.268,512,25.119,512 H332.96c13.851,0,25.119-11.268,25.119-25.119v-34.596C358.079,433.634,346.101,417.417,328.274,411.931z M282.188,273.102v17.102 c0,5.01-4.076,9.086-9.086,9.086h-3.597l5.606-35.042C279.158,265.167,282.188,268.784,282.188,273.102z M84.977,299.29 c-5.01,0-9.086-4.076-9.086-9.086v-17.102c0-4.318,3.03-7.935,7.075-8.854l5.607,35.042H84.977z M88.467,197.133 c-2.799-17.49,2.187-35.25,13.679-48.728c11.493-13.477,28.242-21.207,45.954-21.207h61.88c17.712,0,34.461,7.729,45.954,21.207 c11.492,13.477,16.479,31.238,13.68,48.728l-8.135,50.85h-6.785c-0.263,0-0.484-0.188-0.527-0.447l-6.169-37.017 c-1.337-8.021-8.21-13.843-16.342-13.843H126.427c-8.132,0-15.005,5.822-16.342,13.844l-6.169,37.016 c-0.044,0.259-0.265,0.447-0.527,0.447h-6.785L88.467,197.133z M107.969,319.031l-8.802-55.014h4.22 c8.132,0,15.005-5.822,16.342-13.844l6.169-37.016c0.044-0.259,0.265-0.447,0.527-0.447h105.228c0.263,0,0.484,0.188,0.527,0.447 l6.169,37.017c1.337,8.021,8.21,13.843,16.342,13.843h4.22l-6.161,38.51c-1.87,2.104-21.343,22.417-73.71,22.417 c-4.427,0-8.017,3.589-8.017,8.017s3.589,8.017,8.017,8.017c33.609,0,55.601-7.707,69.003-15.148 c-1.617,3.519-4.006,6.665-7.027,9.183l-34.32,28.6c-3.163,2.636-7.173,4.087-11.291,4.087h-32.732 c-4.117,0-8.128-1.452-11.291-4.087l-34.32-28.6C112.2,330.958,108.969,325.282,107.969,319.031z M109.466,404.196 c10.606-3.263,17.732-12.911,17.732-24.008v-15.858l13.92,11.601c6.039,5.032,13.695,7.804,21.555,7.804h32.732 c7.861,0,15.516-2.772,21.555-7.804l13.92-11.602v15.858c0,11.097,7.126,20.745,17.732,24.008l4.047,1.245 c-28.422,43.606-66.2,54.402-73.639,56.15c-7.513-1.723-45.08-12.315-73.604-56.149L109.466,404.196z M59.858,495.967H25.119 c-5.01,0-9.086-4.076-9.086-9.086v-34.596c0-4.537,1.157-8.833,3.212-12.596l34.267,28.555c4.033,3.361,6.346,8.3,6.346,13.549 V495.967z M282.188,481.794v14.172H75.891v-14.172c0-10.023-4.416-19.451-12.115-25.866l-32.762-27.302 c1.123-0.529,2.289-0.997,3.505-1.371l55.007-16.924c35.591,57.965,86.007,66.991,88.194,67.355 c0.436,0.073,0.876,0.109,1.318,0.109s0.882-0.036,1.318-0.109c2.187-0.365,52.605-9.39,88.194-67.355l55.007,16.925 c1.216,0.374,2.381,0.842,3.505,1.371l-32.76,27.302C286.604,462.344,282.188,471.771,282.188,481.794z M342.046,486.881 c0,5.01-4.076,9.086-9.086,9.086h-34.739v-14.172c0-5.25,2.313-10.189,6.346-13.549l34.267-28.555 c2.055,3.762,3.212,8.058,3.212,12.596V486.881z"></path> </g> </g> </g></svg></button>`;
            
                icon_list.append(icon_button);
                let to_translate = false;
                
                document.querySelector('.icon_btn').addEventListener('click', function() {
                    const footer = document.getElementsByTagName('footer')[0];
                    to_translate = !to_translate;
                    if(to_translate) {
                        let transalte_text = document.createElement('div');
                        transalte_text.innerHTML = `<div class="translation"><div id='translation_text'>Type Something...</div></div>`;
                        
                        footer.insertBefore(transalte_text, footer.firstChild);
                        


                        let input = document.querySelectorAll('div.to2l77zo.gfz4du6o.ag5g9lrv.bze30y65.kao4egtt:not(.qh0vvdkp)')[0];
                        const spans = input.querySelectorAll('span');
                        const textList = [];

                        for (const span of spans) {
                            textList.push(span.textContent);
                        }
                        console.log(textList);









                        // document.querySelector('.use_btn').addEventListener('click', function() {
                        //     let translation_text = document.getElementById('translation_text').innerHTML;
                        //     let input = document.querySelectorAll('div.to2l77zo.gfz4du6o.ag5g9lrv.bze30y65.kao4egtt:not(.qh0vvdkp)')[0];
                           
                        //     input.innerHTML = translation_text;
                        // });
                    }else {
                        footer.removeChild(footer.firstChild);
                    }
                    
                });
            }
          });
        });
      });



    observer.observe(targetNode, config);


})();

